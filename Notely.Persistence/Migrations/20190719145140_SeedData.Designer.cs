// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotelyCore.Persistence;

namespace NotelyCore.Persistence.Migrations
{
    [DbContext(typeof(NotelyCoreDbContext))]
    [Migration("20190719145140_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NotelyCore.Domain.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<int>("Priority");

                    b.Property<string>("Subject");

                    b.HasKey("NoteId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            NoteId = 1,
                            Body = "Body 1",
                            CreatedOn = new DateTime(2019, 7, 19, 17, 51, 40, 66, DateTimeKind.Local).AddTicks(1580),
                            Priority = 2,
                            Subject = "Note 1"
                        },
                        new
                        {
                            NoteId = 2,
                            Body = "Body 2",
                            CreatedOn = new DateTime(2019, 7, 19, 17, 51, 40, 67, DateTimeKind.Local).AddTicks(2524),
                            Priority = 1,
                            Subject = "Note 2"
                        },
                        new
                        {
                            NoteId = 3,
                            Body = "Body 3",
                            CreatedOn = new DateTime(2019, 7, 19, 17, 51, 40, 67, DateTimeKind.Local).AddTicks(2537),
                            Priority = 0,
                            Subject = "Note 3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
